[
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "buildah",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/buildah",
            "uid": "439b5b24-c02e-4a10-8358-5ecf1cd5fed1",
            "resourceVersion": "78656",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:53Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "BUILDER_IMAGE",
                        "type": "string",
                        "description": "The location of the buildah builder image.",
                        "default": "quay.io/buildah/stable:v1.11.0"
                    },
                    {
                        "name": "DOCKERFILE",
                        "type": "string",
                        "description": "Path to the Dockerfile to build.",
                        "default": "./Dockerfile"
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "build",
                    "image": "$(inputs.params.BUILDER_IMAGE)",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "$(inputs.params.DOCKERFILE)",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "$(inputs.params.BUILDER_IMAGE)",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "buildah-v0-8-0",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/buildah-v0-8-0",
            "uid": "9b9b409f-d894-4805-9859-4c3842f72967",
            "resourceVersion": "78657",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:53Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "BUILDER_IMAGE",
                        "type": "string",
                        "description": "The location of the buildah builder image.",
                        "default": "quay.io/buildah/stable:v1.11.0"
                    },
                    {
                        "name": "DOCKERFILE",
                        "type": "string",
                        "description": "Path to the Dockerfile to build.",
                        "default": "./Dockerfile"
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "build",
                    "image": "$(inputs.params.BUILDER_IMAGE)",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "$(inputs.params.DOCKERFILE)",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "$(inputs.params.BUILDER_IMAGE)",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "example-cluster-task",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/example-cluster-task",
            "uid": "9f432731-5492-4169-b297-bee09dc2cdbf",
            "resourceVersion": "320397",
            "generation": 1,
            "creationTimestamp": "2020-01-21T02:18:59Z"
        },
        "spec": {
            "inputs": {
                "params": [
                    {
                        "name": "appName",
                        "type": "string"
                    }
                ]
            },
            "steps": [
                {
                    "name": "",
                    "image": "registry.redhat.io/ubi7/ubi-minimal",
                    "command": [
                        "/bin/bash",
                        "-c",
                        "echo",
                        "$(inputs.params.appName)"
                    ],
                    "resources": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "openshift-client",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/openshift-client",
            "uid": "67f97279-bc47-4032-95ac-f21a210255f3",
            "resourceVersion": "78662",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:53Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "params": [
                    {
                        "name": "ARGS",
                        "type": "array",
                        "description": "The OpenShift CLI arguments to run",
                        "default": [
                            "help"
                        ]
                    }
                ]
            },
            "steps": [
                {
                    "name": "oc",
                    "image": "quay.io/openshift/origin-cli:latest",
                    "command": [
                        "/usr/bin/oc"
                    ],
                    "args": [
                        "$(inputs.params.ARGS)"
                    ],
                    "resources": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "openshift-client-v0-8-0",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/openshift-client-v0-8-0",
            "uid": "5417e8f7-d10c-464d-b7ba-f15c92ca1e9d",
            "resourceVersion": "78666",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:54Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "params": [
                    {
                        "name": "ARGS",
                        "type": "array",
                        "description": "The OpenShift CLI arguments to run",
                        "default": [
                            "help"
                        ]
                    }
                ]
            },
            "steps": [
                {
                    "name": "oc",
                    "image": "quay.io/openshift/origin-cli:latest",
                    "command": [
                        "/usr/bin/oc"
                    ],
                    "args": [
                        "$(inputs.params.ARGS)"
                    ],
                    "resources": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i",
            "uid": "9bf60e52-d308-40f8-aa26-433588319811",
            "resourceVersion": "78670",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:54Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "BUILDER_IMAGE",
                        "type": "string",
                        "description": "The location of the s2i builder image."
                    },
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from.",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    },
                    {
                        "name": "LOGLEVEL",
                        "type": "string",
                        "description": "Log level when running the S2I binary",
                        "default": "0"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i:nightly",
                    "command": [
                        "/usr/local/bin/s2i",
                        "--loglevel=$(inputs.params.LOGLEVEL)",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "$(inputs.params.BUILDER_IMAGE)",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-go",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-go",
            "uid": "5a9b36c5-55c1-4cfe-9806-7f3218531029",
            "resourceVersion": "78675",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:55Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from.",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/devtools/go-toolset-rhel7",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-go-v0-8-0",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-go-v0-8-0",
            "uid": "9b4324da-bdea-4427-8136-dfa48b8d6d0c",
            "resourceVersion": "78678",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:55Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from.",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/devtools/go-toolset-rhel7",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-java-11",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-java-11",
            "uid": "9bcb84b1-fc11-4cf3-8f69-02c9322f0e93",
            "resourceVersion": "78680",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:56Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    },
                    {
                        "name": "MAVEN_ARGS_APPEND",
                        "type": "string",
                        "description": "Additional Maven arguments",
                        "default": ""
                    },
                    {
                        "name": "MAVEN_CLEAR_REPO",
                        "type": "string",
                        "description": "Remove the Maven repository after the artifact is built",
                        "default": "false"
                    },
                    {
                        "name": "MAVEN_MIRROR_URL",
                        "type": "string",
                        "description": "The base URL of a mirror used for retrieving artifacts",
                        "default": ""
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "gen-env-file",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "/bin/sh",
                        "-c"
                    ],
                    "args": [
                        "echo \"MAVEN_CLEAR_REPO=$(inputs.params.MAVEN_CLEAR_REPO)\" \u003e env-file\n\n[[ '$(inputs.params.MAVEN_ARGS_APPEND)' != \"\" ]] \u0026\u0026\n  echo \"MAVEN_ARGS_APPEND=$(inputs.params.MAVEN_ARGS_APPEND)\" \u003e\u003e env-file\n\n[[ '$(inputs.params.MAVEN_MIRROR_URL)' != \"\" ]] \u0026\u0026\n  echo \"MAVEN_MIRROR_URL=$(inputs.params.MAVEN_MIRROR_URL)\" \u003e\u003e env-file\n\necho \"Generated Env file\"\necho \"------------------------------\"\ncat env-file\necho \"------------------------------\""
                    ],
                    "workingDir": "/env-params",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "envparams",
                            "mountPath": "/env-params"
                        }
                    ]
                },
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/openjdk/openjdk-11-rhel7",
                        "--image-scripts-url",
                        "image:///usr/local/s2i",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen",
                        "--environment-file",
                        "/env-params/env-file"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        },
                        {
                            "name": "envparams",
                            "mountPath": "/env-params"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                },
                {
                    "name": "envparams",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-java-11-v0-8-0",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-java-11-v0-8-0",
            "uid": "e65d1bbb-52a0-4c32-aa42-0105cc916faf",
            "resourceVersion": "78682",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:56Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    },
                    {
                        "name": "MAVEN_ARGS_APPEND",
                        "type": "string",
                        "description": "Additional Maven arguments",
                        "default": ""
                    },
                    {
                        "name": "MAVEN_CLEAR_REPO",
                        "type": "string",
                        "description": "Remove the Maven repository after the artifact is built",
                        "default": "false"
                    },
                    {
                        "name": "MAVEN_MIRROR_URL",
                        "type": "string",
                        "description": "The base URL of a mirror used for retrieving artifacts",
                        "default": ""
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "gen-env-file",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "/bin/sh",
                        "-c"
                    ],
                    "args": [
                        "echo \"MAVEN_CLEAR_REPO=$(inputs.params.MAVEN_CLEAR_REPO)\" \u003e env-file\n\n[[ '$(inputs.params.MAVEN_ARGS_APPEND)' != \"\" ]] \u0026\u0026\n  echo \"MAVEN_ARGS_APPEND=$(inputs.params.MAVEN_ARGS_APPEND)\" \u003e\u003e env-file\n\n[[ '$(inputs.params.MAVEN_MIRROR_URL)' != \"\" ]] \u0026\u0026\n  echo \"MAVEN_MIRROR_URL=$(inputs.params.MAVEN_MIRROR_URL)\" \u003e\u003e env-file\n\necho \"Generated Env file\"\necho \"------------------------------\"\ncat env-file\necho \"------------------------------\""
                    ],
                    "workingDir": "/env-params",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "envparams",
                            "mountPath": "/env-params"
                        }
                    ]
                },
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/openjdk/openjdk-11-rhel7",
                        "--image-scripts-url",
                        "image:///usr/local/s2i",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen",
                        "--environment-file",
                        "/env-params/env-file"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        },
                        {
                            "name": "envparams",
                            "mountPath": "/env-params"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                },
                {
                    "name": "envparams",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-java-8",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-java-8",
            "uid": "9c745856-a38d-453b-8baa-c23e2efba838",
            "resourceVersion": "78683",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:56Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    },
                    {
                        "name": "MAVEN_ARGS_APPEND",
                        "type": "string",
                        "description": "Additional Maven arguments",
                        "default": ""
                    },
                    {
                        "name": "MAVEN_CLEAR_REPO",
                        "type": "string",
                        "description": "Remove the Maven repository after the artifact is built",
                        "default": "false"
                    },
                    {
                        "name": "MAVEN_MIRROR_URL",
                        "type": "string",
                        "description": "The base URL of a mirror used for retrieving artifacts",
                        "default": ""
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "gen-env-file",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "/bin/sh",
                        "-c"
                    ],
                    "args": [
                        "echo \"MAVEN_CLEAR_REPO=$(inputs.params.MAVEN_CLEAR_REPO)\" \u003e env-file\n\n[[ '$(inputs.params.MAVEN_ARGS_APPEND)' != \"\" ]] \u0026\u0026\n  echo \"MAVEN_ARGS_APPEND=$(inputs.params.MAVEN_ARGS_APPEND)\" \u003e\u003e env-file\n\n[[ '$(inputs.params.MAVEN_MIRROR_URL)' != \"\" ]] \u0026\u0026\n  echo \"MAVEN_MIRROR_URL=$(inputs.params.MAVEN_MIRROR_URL)\" \u003e\u003e env-file\n\necho \"Generated Env file\"\necho \"------------------------------\"\ncat env-file\necho \"------------------------------\""
                    ],
                    "workingDir": "/env-params",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "envparams",
                            "mountPath": "/env-params"
                        }
                    ]
                },
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift",
                        "--image-scripts-url",
                        "image:///usr/local/s2i",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen",
                        "--environment-file",
                        "/env-params/env-file"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        },
                        {
                            "name": "envparams",
                            "mountPath": "/env-params"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                },
                {
                    "name": "envparams",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-java-8-v0-8-0",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-java-8-v0-8-0",
            "uid": "ce0b4989-dcc9-429f-93b3-da9051a0c4e9",
            "resourceVersion": "78687",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:57Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    },
                    {
                        "name": "MAVEN_ARGS_APPEND",
                        "type": "string",
                        "description": "Additional Maven arguments",
                        "default": ""
                    },
                    {
                        "name": "MAVEN_CLEAR_REPO",
                        "type": "string",
                        "description": "Remove the Maven repository after the artifact is built",
                        "default": "false"
                    },
                    {
                        "name": "MAVEN_MIRROR_URL",
                        "type": "string",
                        "description": "The base URL of a mirror used for retrieving artifacts",
                        "default": ""
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "gen-env-file",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "/bin/sh",
                        "-c"
                    ],
                    "args": [
                        "echo \"MAVEN_CLEAR_REPO=$(inputs.params.MAVEN_CLEAR_REPO)\" \u003e env-file\n\n[[ '$(inputs.params.MAVEN_ARGS_APPEND)' != \"\" ]] \u0026\u0026\n  echo \"MAVEN_ARGS_APPEND=$(inputs.params.MAVEN_ARGS_APPEND)\" \u003e\u003e env-file\n\n[[ '$(inputs.params.MAVEN_MIRROR_URL)' != \"\" ]] \u0026\u0026\n  echo \"MAVEN_MIRROR_URL=$(inputs.params.MAVEN_MIRROR_URL)\" \u003e\u003e env-file\n\necho \"Generated Env file\"\necho \"------------------------------\"\ncat env-file\necho \"------------------------------\""
                    ],
                    "workingDir": "/env-params",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "envparams",
                            "mountPath": "/env-params"
                        }
                    ]
                },
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift",
                        "--image-scripts-url",
                        "image:///usr/local/s2i",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen",
                        "--environment-file",
                        "/env-params/env-file"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        },
                        {
                            "name": "envparams",
                            "mountPath": "/env-params"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                },
                {
                    "name": "envparams",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-nodejs",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-nodejs",
            "uid": "4f74140b-a7df-486b-9ac5-ffa363f3c31e",
            "resourceVersion": "78689",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:57Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "VERSION",
                        "type": "string",
                        "description": "The version of the nodejs",
                        "default": "8"
                    },
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from.",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/rhscl/nodejs-$(inputs.params.VERSION)-rhel7",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-nodejs-v0-8-0",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-nodejs-v0-8-0",
            "uid": "60cead5e-4acf-46e3-8334-859ab3a8530d",
            "resourceVersion": "78693",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:58Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "VERSION",
                        "type": "string",
                        "description": "The version of the nodejs",
                        "default": "8"
                    },
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from.",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/rhscl/nodejs-$(inputs.params.VERSION)-rhel7",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-python-3",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-python-3",
            "uid": "34a0225d-e0fc-40df-8f96-80673b08bded",
            "resourceVersion": "78697",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:58Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "MINOR_VERSION",
                        "type": "string",
                        "description": "The minor version of the python 3",
                        "default": "6"
                    },
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from.",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/rhscl/python-3$(inputs.params.MINOR_VERSION)-rhel7",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-python-3-v0-8-0",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-python-3-v0-8-0",
            "uid": "b23af17b-c770-43b6-af42-87afe5d4a846",
            "resourceVersion": "78698",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:58Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "MINOR_VERSION",
                        "type": "string",
                        "description": "The minor version of the python 3",
                        "default": "6"
                    },
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from.",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i:v0.8.0",
                    "command": [
                        "s2i",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "registry.access.redhat.com/rhscl/python-3$(inputs.params.MINOR_VERSION)-rhel7",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                }
            ]
        }
    },
    {
        "kind": "ClusterTask",
        "apiVersion": "tekton.dev/v1alpha1",
        "metadata": {
            "name": "s2i-v0-8-0",
            "selfLink": "/apis/tekton.dev/v1alpha1/clustertasks/s2i-v0-8-0",
            "uid": "db57f332-ab01-4380-a208-b27e05eaee6d",
            "resourceVersion": "78671",
            "generation": 1,
            "creationTimestamp": "2020-01-20T17:39:54Z",
            "annotations": {
                "manifestival": "new"
            },
            "ownerReferences": [
                {
                    "apiVersion": "operator.tekton.dev/v1alpha1",
                    "kind": "Config",
                    "name": "cluster",
                    "uid": "e595c575-4148-42b5-8d8b-44ee77f92d4c",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ]
        },
        "spec": {
            "inputs": {
                "resources": [
                    {
                        "name": "source",
                        "type": "git"
                    }
                ],
                "params": [
                    {
                        "name": "BUILDER_IMAGE",
                        "type": "string",
                        "description": "The location of the s2i builder image."
                    },
                    {
                        "name": "PATH_CONTEXT",
                        "type": "string",
                        "description": "The location of the path to run s2i from.",
                        "default": "."
                    },
                    {
                        "name": "TLSVERIFY",
                        "type": "string",
                        "description": "Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)",
                        "default": "true"
                    },
                    {
                        "name": "LOGLEVEL",
                        "type": "string",
                        "description": "Log level when running the S2I binary",
                        "default": "0"
                    }
                ]
            },
            "outputs": {
                "resources": [
                    {
                        "name": "image",
                        "type": "image"
                    }
                ]
            },
            "steps": [
                {
                    "name": "generate",
                    "image": "quay.io/openshift-pipeline/s2i:nightly",
                    "command": [
                        "/usr/local/bin/s2i",
                        "--loglevel=$(inputs.params.LOGLEVEL)",
                        "build",
                        "$(inputs.params.PATH_CONTEXT)",
                        "$(inputs.params.BUILDER_IMAGE)",
                        "--as-dockerfile",
                        "/gen-source/Dockerfile.gen"
                    ],
                    "workingDir": "/workspace/source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ]
                },
                {
                    "name": "build",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "bud",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "--layers",
                        "-f",
                        "/gen-source/Dockerfile.gen",
                        "-t",
                        "$(outputs.resources.image.url)",
                        "."
                    ],
                    "workingDir": "/gen-source",
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        },
                        {
                            "name": "gen-source",
                            "mountPath": "/gen-source"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                },
                {
                    "name": "push",
                    "image": "quay.io/buildah/stable",
                    "command": [
                        "buildah",
                        "push",
                        "--tls-verify=$(inputs.params.TLSVERIFY)",
                        "$(outputs.resources.image.url)",
                        "docker://$(outputs.resources.image.url)"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "varlibcontainers",
                            "mountPath": "/var/lib/containers"
                        }
                    ],
                    "securityContext": {
                        "privileged": true
                    }
                }
            ],
            "volumes": [
                {
                    "name": "varlibcontainers",
                    "emptyDir": {}
                },
                {
                    "name": "gen-source",
                    "emptyDir": {}
                }
            ]
        }
    }
]
