{
  "name": "vscode-tekton-pipelines",
  "displayName": "Tekton",
  "description": "Tekton pipelines integration",
  "version": "0.1.0",
  "license": "MIT",
  "publisher": "redhat",
  "repository": {
    "type": "git",
    "url": "https://github.com/redhat-developer/vscode-tekton.git"
  },
  "bugs": "https://github.com/redhat-developer/vscode-tekton/issues",
  "engines": {
    "vscode": "^1.32.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "images/tekton.png",
  "activationEvents": [
    "onView:tektonPipelineExplorer",
    "onView:extension.vsKubernetesExplorer",
    "onCommand:tekton.pipeline.restart",
    "onCommand:tekton.pipeline.start",
    "onCommand:tekton.pipeline.createFromLocal",
    "onCommand:tekton.pipeline.list",
    "onCommand:tekton.pipeline.describe",
    "onCommand:tekton.pipeline.delete",
    "onCommand:tekton.pipelinerun.list",
    "onCommand:tekton.pipelinerun.restart",
    "onCommand:tekton.pipelinerun.describe",
    "onCommand:tekton.pipelinerun.logs",
    "onCommand:tekton.pipelinerun.cancel",
    "onCommand:tekton.pipelinerun.delete",
    "onCommand:tekton.task.start",
    "onCommand:tekton.task.list",
    "onCommand:tekton.task.delete",
    "onCommand:tekton.clustertask.start",
    "onCommand:tekton.clustertask.list",
    "onCommand:tekton.clustertask.delete",
    "onCommand:tekton.taskrun.list",
    "onCommand:tekton.taskrun.logs",
    "onCommand:tekton.taskrun.cancel",
    "onCommand:tekton.taskrun.delete",
    "onCommand:tekton.explorer.refresh",
    "onCommand:tekton.about",
    "onCommand:tekton.explorer.reportIssue",
    "onLanguage:yaml"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "tekton.about",
        "title": "About",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipeline.start",
        "title": "Start Pipeline",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipeline.restart",
        "title": "Start Last Run",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipeline.createFromLocal",
        "title": "New Pipeline from local folder",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipeline.list",
        "title": "List Pipelines",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipeline.describe",
        "title": "Describe Pipelines",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipeline.delete",
        "title": "Delete Pipelines",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipelinerun.list",
        "title": "List Pipelineruns",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipelinerun.restart",
        "title": "Restart Pipelinerun",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipelinerun.describe",
        "title": "Describe Pipelineruns",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipelinerun.logs",
        "title": "Show Pipelinerun logs",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipelinerun.delete",
        "title": "Delete Pipelineruns",
        "category": "Tekton"
      },
      {
        "command": "tekton.pipelinerun.cancel",
        "title": "Cancel Pipelineruns",
        "category": "Tekton"
      },
      {
        "command": "tekton.task.start",
        "title": "Start Task",
        "category": "Tekton"
      },
      {
        "command": "tekton.task.list",
        "title": "List Tasks",
        "category": "Tekton"
      },
      {
        "command": "tekton.task.delete",
        "title": "Delete Task",
        "category": "Tekton"
      },
      {
        "command": "tekton.clustertask.start",
        "title": "Start ClusterTask",
        "category": "Tekton"
      },
      {
        "command": "tekton.clustertask.list",
        "title": "List ClusterTasks",
        "category": "Tekton"
      },
      {
        "command": "tekton.clustertask.delete",
        "title": "Delete ClusterTask",
        "category": "Tekton"
      },
      {
        "command": "tekton.taskrun.list",
        "title": "List Taskruns",
        "category": "Tekton"
      },
      {
        "command": "tekton.taskrun.logs",
        "title": "Show Taskrun logs",
        "category": "Tekton"
      },
      {
        "command": "tekton.taskrun.delete",
        "title": "Delete Taskruns",
        "category": "Tekton"
      },
      {
        "command": "tekton.taskrun.cancel",
        "title": "Cancel Taskruns",
        "category": "Tekton"
      },
      {
        "command": "tekton.explorer.refresh",
        "title": "Refresh View",
        "category": "Tekton",
        "icon": {
          "dark": "images/dark/icon-refresh.svg",
          "light": "images/light/icon-refresh.svg"
        }
      },
      {
        "command": "tekton.explorer.reportIssue",
        "title": "Report Extension Issue on GitHub",
        "category": "Tekton",
        "icon": {
          "dark": "images/dark/icon-issue.svg",
          "light": "images/light/icon-issue.svg"
        }
      }
    ],
    "keybindings": [
      {
        "command": "tekton.explorer.refresh",
        "key": "alt+shift+r",
        "mac": "ctrl+shift+r"
      }
    ],
    "languages": [
      {
        "id": "yaml",
        "filenames": [
          "requirements.lock",
          "**/.kube/config"
        ]
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "tektonView",
          "title": "Tekton Pipelines",
          "icon": "images/tekton.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "extension.vsKubernetesExplorer",
          "name": "Clusters"
        },
        {
          "id": "tektonPipelineExplorer",
          "name": "Tekton Pipelines"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "tekton.pipeline.start",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipeline.restart",
          "when": "view === tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipeline.describe",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipeline.list",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipeline.delete",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipelinerun.list",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipelinerun.describe",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipelinerun.restart",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipelinerun.logs",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipelinerun.delete",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.pipelinerun.cancel",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.task.start",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.task.list",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.task.delete",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.clustertask.start",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.clustertask.list",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.clustertask.delete",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.taskrun.list",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.taskrun.logs",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.taskrun.delete",
          "when": "view == tektonPipelineExplorer"
        },
        {
          "command": "tekton.taskrun.cancel",
          "when": "view == tektonPipelineExplorer"
        }
      ],
      "view/title": [
        {
          "command": "tekton.explorer.refresh",
          "when": "view == tektonPipelineExplorer",
          "group": "navigation"
        },
        {
          "command": "tekton.explorer.reportIssue",
          "when": "view == tektonPipelineExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "tekton.pipeline.restart",
          "when": "view == tektonPipelineExplorer && viewItem == pipeline",
          "group": "c1@1"
        },
        {
          "command": "tekton.pipeline.start",
          "when": "view == tektonPipelineExplorer && viewItem == pipeline",
          "group": "c1@2"
        },
        {
          "command": "tekton.pipeline.list",
          "when": "view == tektonPipelineExplorer && viewItem == pipelinenode",
          "group": "c1"
        },
        {
          "command": "tekton.pipeline.describe",
          "when": "view == tektonPipelineExplorer  && viewItem == pipeline",
          "group": "c1@3"
        },
        {
          "command": "tekton.pipeline.delete",
          "when": "view == tektonPipelineExplorer  && viewItem == pipeline",
          "group": "c2"
        },
        {
          "command": "tekton.about",
          "when": "view == tektonPipelineExplorer",
          "group": "c3"
        },
        {
          "command": "tekton.pipelinerun.list",
          "when": "view == tektonPipelineExplorer && viewItem == pipeline",
          "group": "c1@4"
        },
        {
          "command": "tekton.pipelinerun.restart",
          "when": "view == tektonPipelineExplorer && viewItem == pipelinerun",
          "group": "c1@1"
        },
        {
          "command": "tekton.pipelinerun.describe",
          "when": "view == tektonPipelineExplorer && viewItem == pipelinerun",
          "group": "c1@2"
        },
        {
          "command": "tekton.pipelinerun.logs",
          "when": "view == tektonPipelineExplorer && viewItem == pipelinerun",
          "group": "c1@3"
        },
        {
          "command": "tekton.pipelinerun.cancel",
          "when": "view == tektonPipelineExplorer && viewItem == pipelinerun",
          "group": "c2@1"
        },
        {
          "command": "tekton.pipelinerun.delete",
          "when": "view == tektonPipelineExplorer && viewItem == pipelinerun",
          "group": "c2@2"
        },
        {
          "command": "tekton.task.start",
          "when": "view == tektonPipelineExplorer && viewItem == task",
          "group": "c1"
        },
        {
          "command": "tekton.task.list",
          "when": "view == tektonPipelineExplorer && viewItem == tasknode",
          "group": "c1"
        },
        {
          "command": "tekton.task.delete",
          "when": "view == tektonPipelineExplorer && viewItem == task",
          "group": "c2"
        },
        {
          "command": "tekton.clustertask.start",
          "when": "view == tektonPipelineExplorer && viewItem == clustertask",
          "group": "c1"
        },
        {
          "command": "tekton.clustertask.list",
          "when": "view == tektonPipelineExplorer && viewItem == clustertasknode",
          "group": "c1"
        },
        {
          "command": "tekton.clustertask.delete",
          "when": "view == tektonPipelineExplorer && viewItem == clustertask",
          "group": "c2"
        },
        {
          "command": "tekton.taskrun.list",
          "when": "view == tektonPipelineExplorer && viewItem == pipelinerun",
          "group": "c1@4"
        },
        {
          "command": "tekton.taskrun.logs",
          "when": "view == tektonPipelineExplorer && viewItem == taskrun",
          "group": "c1"
        },
        {
          "command": "tekton.taskrun.delete",
          "when": "view == tektonPipelineExplorer && viewItem == taskrun",
          "group": "c2"
        }
      ]
    }
  },
  "configuration": {
    "type": "object",
    "title": "Tekton Configuration",
    "properties": {
      "vs-tekton": {
        "type": "object",
        "description": "Tekton Configuration",
        "properties": {
          "vs-tekton.namespace": {
            "type": "string",
            "description": "The namespace to use for all commands"
          },
          "vs-kubernetes.outputFormat": {
            "enum": [
              "json",
              "yaml"
            ],
            "type": "string",
            "description": "Output format for Tekton specs. One of 'json' or 'yaml' (default)."
          },
          "vs-tekton.tkn-path.windows": {
            "type": "string",
            "description": "File path to a tkn binary."
          },
          "vs-tekton.tkn-path.mac": {
            "type": "string",
            "description": "File path to a tkn binary."
          },
          "vs-tekton.tkn-path.linux": {
            "type": "string",
            "description": "File path to a tkn binary."
          }
        },
        "default": {
          "vs-tekton.namespace": "tekton-pipelines",
          "vs-tekton.tkn-path": "",
          "vs-tekton.tknVersioning": "user-provided",
          "vs-kubernetes.outputFormat": "yaml"
        }
      },
      "vs-tekton.showChannelOutput": {
        "title": "Show channel on output",
        "type": "boolean",
        "default": "false",
        "description": "Show Tekton Pipeline output channel when new text added to ouput stream"
      },
      "vs-tekton.outputVerbosityLevel": {
        "title": "Output Verbosity Level",
        "type": "number",
        "default": 0,
        "description": "Output verbosity level (value between 0 and 9) for Tekton Pipeline Start, Push and Watch commands in output channel and integrated terminal."
      }
    }
  },
  "extensionDependencies": [
    "ms-kubernetes-tools.vscode-kubernetes-tools"
  ],
  "scripts": {
    "verify": "node ./out/build/verify-tools.js",
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "clean": "rm -rf out || rmdir out /s /q",
    "test": "npm run clean && npm run compile && npm run verify && node ./out/build/install-vscode.js && node ./node_modules/vscode/bin/test",
    "update-deps": "node_modules/.bin/ncu --upgrade --loglevel verbose --packageFile package.json && npm update",
    "coverage:upload": "codecov -f coverage/coverage-final.json",
    "build": "npm run clean && tslint -p tslint.json && npm run compile"
  },
  "devDependencies": {
    "@types/byline": "^4.2.31",
    "@types/chai": "^4.1.7",
    "@types/collections": "^5.0.0",
    "@types/fs-extra": "^8.0.0",
    "@types/js-yaml": "^3.12.1",
    "@types/mkdirp": "^0.5.2",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.0.10",
    "@types/request": "^2.48.1",
    "@types/shelljs": "^0.8.5",
    "@types/sinon": "^5.0.7",
    "@types/sinon-chai": "^3.2.2",
    "@types/string-format": "^2.0.0",
    "@types/tmp": "0.1.0",
    "@types/validator": "^10.11.2",
    "chai": "^4.2.0",
    "codecov": "^3.5.0",
    "decache": "^4.5.1",
    "glob": "^7.1.3",
    "istanbul": "^0.4.5",
    "mocha": "^6.1.4",
    "mocha-jenkins-reporter": "^0.4.1",
    "proxyquire": "^2.1.0",
    "remap-istanbul": "^0.13.0",
    "sinon": "^7.3.2",
    "sinon-chai": "^3.3.0",
    "tmp": "0.1.0",
    "tslint": "^5.18.0",
    "typescript": "^3.5.2",
    "vscode": "^1.1.35",
    "walker": "^1.0.7"
  },
  "dependencies": {
    "@types/pluralize": "^0.0.29",
    "@kubernetes/client-node": "^0.10.2",
    "binary-search": "^1.3.5",
    "byline": "^5.0.0",
    "event-stream": "3.3.4",
    "fs-extra": "^7.0.1",
    "git-fetch-pack": "^0.1.1",
    "git-transport-protocol": "^0.1.0",
    "hasha": "^5.0.0",
    "js-yaml": "^3.13.1",
    "mkdirp": "^0.5.1",
    "open": "^6.4.0",
    "pluralize": "^4.0.0",
    "request": "^2.88.0",
    "request-progress": "^3.0.0",
    "semver": "^6.3.0",
    "shelljs": "^0.8.3",
    "string-format": "^2.0.0",
    "targz": "^1.0.1",
    "unzip-stream": "^0.3.0",
    "validator": "^11.0.0",
    "vscode-kubernetes-tools-api": "1.0.0"
  }
}
