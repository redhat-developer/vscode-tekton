
@import '~@patternfly/patternfly/sass-utilities/colors';
@import '~patternfly/dist/sass/patternfly/variables';
@import "~bootstrap-sass/assets/stylesheets/bootstrap/variables";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins";
@import '~patternfly/dist/sass/patternfly/bootstrap-mixin-overrides';
@import "~bootstrap-sass/assets/stylesheets/bootstrap/normalize";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/scaffolding";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/type";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/code";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/grid";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/tables";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/forms";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/buttons"; // required by <FilterSidePanelCategory> in patternfly-react
@import "~bootstrap-sass/assets/stylesheets/bootstrap/component-animations";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/button-groups";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/input-groups";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/list-group";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/close";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/modals";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/tooltip"; // required by <CatalogTileBadge> in patternfly-react
@import "~bootstrap-sass/assets/stylesheets/bootstrap/utilities";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/responsive-utilities";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/dropdowns"; // required by @patternfly/react-console
@import "~patternfly/dist/sass/patternfly/mixins";
@import '~patternfly/dist/sass/patternfly/buttons'; // required by <FilterSidePanelCategory> in patternfly-react
@import '~patternfly/dist/sass/patternfly/modals';
@import "~patternfly/dist/sass/patternfly/notifications-drawer";
@import '~patternfly/dist/sass/patternfly/toolbar';
@import '~patternfly/dist/sass/patternfly/forms';
@import '~@patternfly/react-catalog-view-extension/dist/sass/variables';
@import '~@patternfly/react-catalog-view-extension/dist/sass/catalog-item';
@import '~@patternfly/react-catalog-view-extension/dist/sass/catalog-tile';
@import '~@patternfly/react-catalog-view-extension/dist/sass/filter-side-panel';
@import '~@patternfly/react-catalog-view-extension/dist/sass/properties-side-panel';
@import '~@patternfly/react-catalog-view-extension/dist/sass/vertical-tabs';
@import '~@patternfly/patternfly/sass-utilities/all';
@import "~@patternfly/patternfly/variables";
@import "~@patternfly/patternfly/base";
@import "~@patternfly/patternfly/components/Drawer/drawer";
@import "~@patternfly/patternfly/components/Form/form";
@import "~@patternfly/patternfly/components/FormControl/form-control";
@import "~@patternfly/patternfly/components/InputGroup/input-group";
@import "~@patternfly/patternfly/components/DataToolbar/data-toolbar";
@import "~@patternfly/patternfly/components/NotificationBadge/notification-badge";
@import "~@patternfly/patternfly/components/NotificationDrawer/notification-drawer";
@import "~@patternfly/patternfly/utilities/Sizing/sizing";
@import "~@patternfly/patternfly/patternfly-charts";
@import '~@patternfly/patternfly/sass-utilities/scss-variables';
@import '~patternfly/dist/sass/patternfly/color-variables';

$font-size-base: 14px;
$color-configmap-dark: $pf-color-purple-600;
$color-secret-dark: $pf-color-orange-400;


.co-overlay {
  background: rgba(0, 0, 0, 0.5);
  bottom: 0;
  cursor: default;
  left: 0;
  overflow-x: hidden;
  overflow-y: auto;
  position: fixed;
  right: 0;
  top: 0;
  z-index: $zindex-modal;
}

@mixin scroll-shadows-vertical($shadow-width: 90%, $shadow-opacity: 0.25) {
  background-attachment: scroll;
  background-image: radial-gradient(ellipse at top, rgba(0, 0, 0, $shadow-opacity) 0%, rgba(0, 0, 0, 0) $shadow-width), radial-gradient(ellipse at bottom, rgba(0, 0, 0, $shadow-opacity) 0%, rgba(0, 0, 0, 0) $shadow-width);
  background-position: 0 0, 0 100%;
  background-repeat: no-repeat;
  background-size: 100% 5px;
}
    
@mixin scroll-shadows-vertical-covers($shadow-cover-bg-color: rgba(255,255,255,1), $shadow-cover-bg-color-transparent: rgba(255,255,255,0)) {
  background-attachment: local;
  background-image: linear-gradient($shadow-cover-bg-color 30%, $shadow-cover-bg-color-transparent), linear-gradient($shadow-cover-bg-color-transparent, $shadow-cover-bg-color 70%);
  background-position: 0 0, 0 100%;
  background-repeat: no-repeat;
  background-size: 100% 12px;
}

.modal-body {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  height: 100%;
  overflow-y: auto;
  padding: 0;
  @include scroll-shadows-vertical;
  -webkit-overflow-scrolling: touch;
}

form.pf-c-form {
  --pf-c-form__helper-text--Color: var(--pf-global--Color--200);
}

:root {
  --pf-chart-global--FontFamily: $font-family-base; // so charts get the correct font-family
  --pf-global--FontSize--md: $font-size-base;
  --pf-global--FontSize--sm: 13px;
}

.pf-c-form__helper-text {
  font-size: 13px;
  color: #525151;
}

.pf-c-form__label-text {
  font-size: 13px;
  color: #0a0a0acf;;
}

.modal-body-border {
  border-top: 1px solid $pf-color-black-300;
}

.modal-body-content {
  height: 100%;
}

.modal-body-inner-shadow-covers {
  min-height: 100%;
  // --pf-c-modal-box--Padding* will not render correctly here so applying pf4 spacer values
  padding: 0 var(--pf-global--spacer--xl) var(--pf-global--spacer--xl);
  @include scroll-shadows-vertical-covers;
  width: 100%;

  // so that input, textarea, button, and input-group-addon don't mask the inner scroll shadows
  input, textarea {
    &.pf-c-form-control {
      font-size: 14px;
      height: auto;
      background-color: transparent;
      &[disabled],
      &[readonly] {
        background-color: rgba(128, 128, 128, 0.15);
      }
    }
  }

  .input-group-addon {
    background-color: rgba(227, 227, 227, 0.5);
  }
}

.modal-content {
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative;
  // margin: auto;
  // max-width: 768px;
  margin: 0 auto;
  width: 78%;
  top: 44px;
  @media(min-width: $screen-sm-min) {
    // Desktop only responsive max-height allows modal to adjust to content height and enable scroll shadows if needed.
    max-height: calc(100vh - 60px);
    // Dropdown workaround:  use when modal content can expand (taints, tolerations)
    &--accommodate-dropdown .modal-body-inner-shadow-covers {
      padding-bottom: 100px;
    }
    // Dropdown workaround: use when modal content is short and cannot expand
    &--no-inner-scroll {
      .modal-body {
        overflow-y: visible !important;
      }
      .modal-body-content {
        background-color: var(--pf-global--BackgroundColor--100);
      }
      .modal-body-inner-shadow-covers {
        padding-bottom: var(--pf-global--spacer--lg);
      }
      .modal-footer {
        padding-top: 0;
      }
    }
  }
}

// setting a height on modal-dialog enables flex child height to shrink and become scrollable
.modal-dialog {
  margin-bottom: 0;
  outline: 0;

  @media(max-width: $screen-xs-max) and (orientation: portrait) {
    height: calc(100% - 20px); // subtract height margin-top 10px + margin-bottom 10px
  }
  @media(max-width: $screen-xs-max) and (orientation: landscape) {
    height: calc(100% - 60px); // At desktop, subtract margin-top 30px + margin-bottom 30px OR in the case of mobile landscape orientation, subtract the height of ios url control bar, since its height is not taken into account when the viewport height is calculated on initial page load. This causes the modal to extend below the viewport and hide modal-footer buttons.
  }
}

.modal-footer {
  background-color: var(--pf-global--BackgroundColor--100);
  margin-top: 0;
  padding: var(--pf-global--spacer--md) var(--pf-global--spacer--xl) var(--pf-global--spacer--xl) var(--pf-global--spacer--xl);
}

.modal-header {
  background-color:var(--pf-global--BackgroundColor--100);
  padding: var(--pf-global--spacer--xl) var(--pf-global--spacer--xl) var(--pf-global--spacer--lg);
}

.toleration-modal__field, .taint-modal__field  {
  padding-right: 0;
}

.toleration-modal__field, .taint-modal__input {
  margin-bottom: 5px;
  @media(max-width: $screen-sm-max) {
    margin-bottom: 10px;
  }
}

.toleration-modal__heading, .taint-modal__heading {
  margin-bottom: 5px;
}

.toleration-modal__row, .taint-modal__row {
  margin-bottom: 15px;
  @media(max-width: $screen-sm-max) {
    margin-bottom: 24px;
  }
}

.pf-c-form__actions--right {
  justify-content: flex-end;
}

.pf-c-form__group--no-top-margin {
  margin-top: 0 !important;
}

.pf-m-redhat-font .pf-c-button {
  --pf-c-button--FontWeight: var(--pf-global--FontWeight--normal);
}

.pf-c-button.pf-m-secondary {
  color: var(--pf-c-button--m-secondary--Color);
  background-color: var(--pf-c-button--m-secondary--BackgroundColor);
}

$headings-font-family: var(--pf-global--FontFamily--heading--sans-serif);

h2 {
  font-size: 20px;
}

h2 {
  display: block;
  font-size: 1.5em;
  margin-block-start: 0.83em;
  margin-block-end: 0.83em;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
  font-weight: bold;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  // reset headings font family back to correct value
  // bug caused by PF4 _shield-inheritable.scss
  .pf-l-split {
    font-family: $headings-font-family;
  }
}

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: var(--pf-global--FontFamily--heading--sans-serif);
  font-weight: var(--pf-global--FontWeight--normal);
  line-height: 1.1;
  color: inherit;
}

label {
  font-weight: 600;
}

.pf-c-select__toggle {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  min-width: var(--pf-c-select__toggle--MinWidth);
  padding: var(--pf-c-select__toggle--PaddingTop) var(--pf-c-select__toggle--PaddingRight) var(--pf-c-select__toggle--PaddingBottom) var(--pf-c-select__toggle--PaddingLeft);
  font-size: var(--pf-c-select__toggle--FontSize);
  font-weight: var(--pf-c-select__toggle--FontWeight);
  line-height: var(--pf-c-select__toggle--LineHeight);
  color: var(--pf-c-select__toggle--Color);
  white-space: nowrap;
  cursor: pointer;
  background-color: var(--pf-c-select__toggle--BackgroundColor);
  border: none;
}

.pf-c-select__toggle-text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 15px;
  font-style: normal;
  color: #1d1b1bd9;
}

.pf-c-select__menu {
  position: absolute;
  top: var(--pf-c-select__menu--Top);
  z-index: var(--pf-c-select__menu--ZIndex);
  min-width: 100%;
  padding-top: var(--pf-c-select__menu--PaddingTop);
  padding-bottom: var(--pf-c-select__menu--PaddingBottom);
  background-color: var(--pf-c-select__menu--BackgroundColor);
  background-clip: padding-box;
  border: var(--pf-c-select__menu--BorderWidth) solid transparent;
  box-shadow: var(--pf-c-select__menu--BoxShadow);
}

.pf-c-select__menu-item {
  position: relative;
  width: 100%;
  padding: var(--pf-c-select__menu-item--PaddingTop) var(--pf-c-select__menu-item--PaddingRight) var(--pf-c-select__menu-item--PaddingBottom) var(--pf-c-select__menu-item--PaddingLeft);
  font-size: var(--pf-c-select__menu-item--FontSize);
  font-weight: var(--pf-c-select__menu-item--FontWeight);
  line-height: var(--pf-c-select__menu-item--LineHeight);
  color: #1d1b1bd9;
  text-align: left;
  white-space: nowrap;
  background-color: transparent;
  border: none;
}

.pf-c-button {
  --pf-c-button--PaddingTop: var(--pf-global--spacer--form-element);
  --pf-c-button--PaddingRight: var(--pf-global--spacer--md);
  --pf-c-button--PaddingBottom: var(--pf-global--spacer--form-element);
  --pf-c-button--PaddingLeft: var(--pf-global--spacer--md);
  --pf-c-button--LineHeight: var(--pf-global--LineHeight--md);
  --pf-c-button--FontWeight: var(--pf-global--FontWeight--semi-bold);
  --pf-c-button--FontSize: var(--pf-global--FontSize--md);
  --pf-c-button--BorderRadius: var(--pf-global--BorderRadius--sm);
  --pf-c-button--BorderColor: transparent;
  --pf-c-button--BorderWidth: var(--pf-global--BorderWidth--sm);
  --pf-c-button--hover--BorderWidth: var(--pf-global--BorderWidth--md);
  --pf-c-button--focus--BorderWidth: var(--pf-global--BorderWidth--md);
  --pf-c-button--active--BorderWidth: var(--pf-global--BorderWidth--md);
  --pf-c-button--disabled--Color: var(--pf-global--disabled-color--100);
  --pf-c-button--disabled--BackgroundColor: var(--pf-global--disabled-color--200);
  --pf-c-button--disabled--BorderColor: transparent;
  --pf-c-button--m-primary--BackgroundColor: var(--pf-global--primary-color--100);
  --pf-c-button--m-primary--Color: var(--pf-global--Color--light-100);
  --pf-c-button--m-primary--hover--BackgroundColor: var(--pf-global--primary-color--200);
  --pf-c-button--m-primary--hover--Color: var(--pf-global--Color--light-100);
  --pf-c-button--m-primary--focus--BackgroundColor: var(--pf-global--primary-color--200);
  --pf-c-button--m-primary--focus--Color: var(--pf-global--Color--light-100);
  --pf-c-button--m-primary--active--BackgroundColor: var(--pf-global--primary-color--200);
  --pf-c-button--m-primary--active--Color: var(--pf-global--Color--light-100);
  --pf-c-button--m-secondary--BackgroundColor: transparent;
  --pf-c-button--m-secondary--BorderColor: var(--pf-global--primary-color--100);
  --pf-c-button--m-secondary--Color: var(--pf-global--primary-color--100);
  --pf-c-button--m-secondary--hover--BackgroundColor: transparent;
  --pf-c-button--m-secondary--hover--BorderColor: var(--pf-global--primary-color--100);
  --pf-c-button--m-secondary--hover--Color: var(--pf-global--primary-color--100);
  --pf-c-button--m-secondary--focus--BackgroundColor: transparent;
  --pf-c-button--m-secondary--focus--BorderColor: var(--pf-global--primary-color--100);
  --pf-c-button--m-secondary--focus--Color: var(--pf-global--primary-color--100);
  --pf-c-button--m-secondary--active--BackgroundColor: transparent;
  --pf-c-button--m-secondary--active--BorderColor: var(--pf-global--primary-color--100);
  --pf-c-button--m-secondary--active--Color: var(--pf-global--primary-color--100);
  --pf-c-button--m-tertiary--BackgroundColor: transparent;
  --pf-c-button--m-tertiary--BorderColor: var(--pf-global--Color--100);
  --pf-c-button--m-tertiary--Color: var(--pf-global--Color--100);
  --pf-c-button--m-tertiary--hover--BackgroundColor: transparent;
  --pf-c-button--m-tertiary--hover--BorderColor: var(--pf-global--Color--100);
  --pf-c-button--m-tertiary--hover--Color: var(--pf-global--Color--100);
  --pf-c-button--m-tertiary--focus--BackgroundColor: transparent;
  --pf-c-button--m-tertiary--focus--BorderColor: var(--pf-global--Color--100);
  --pf-c-button--m-tertiary--focus--Color: var(--pf-global--Color--100);
  --pf-c-button--m-tertiary--active--BackgroundColor: transparent;
  --pf-c-button--m-tertiary--active--BorderColor: var(--pf-global--Color--100);
  --pf-c-button--m-tertiary--active--Color: var(--pf-global--Color--100);
  --pf-c-button--m-danger--BackgroundColor: var(--pf-global--danger-color--100);
  --pf-c-button--m-danger--Color: var(--pf-global--Color--light-100);
  --pf-c-button--m-danger--hover--BackgroundColor: var(--pf-global--danger-color--200);
  --pf-c-button--m-danger--hover--Color: var(--pf-global--Color--light-100);
  --pf-c-button--m-danger--focus--BackgroundColor: var(--pf-global--danger-color--200);
  --pf-c-button--m-danger--focus--Color: var(--pf-global--Color--light-100);
  --pf-c-button--m-danger--active--BackgroundColor: var(--pf-global--danger-color--200);
  --pf-c-button--m-danger--active--Color: var(--pf-global--Color--light-100);
  --pf-c-button--m-link--Color: var(--pf-global--link--Color);
  --pf-c-button--m-link--hover--Color: var(--pf-global--link--Color--hover);
  --pf-c-button--m-link--focus--Color: var(--pf-global--link--Color--hover);
  --pf-c-button--m-link--active--Color: var(--pf-global--link--Color--hover);
  --pf-c-button--m-link--disabled--BackgroundColor: transparent;
  --pf-c-button--m-link--m-inline--hover--TextDecoration: var(--pf-global--link--TextDecoration--hover);
  --pf-c-button--m-link--m-inline--hover--Color: var(--pf-global--link--Color--hover);
  --pf-c-button--m-plain--Color: var(--pf-global--Color--200);
  --pf-c-button--m-plain--hover--Color: var(--pf-global--Color--100);
  --pf-c-button--m-plain--focus--Color: var(--pf-global--Color--100);
  --pf-c-button--m-plain--active--Color: var(--pf-global--Color--100);
  --pf-c-button--m-plain--disabled--Color: var(--pf-global--disabled-color--200);
  --pf-c-button--m-plain--disabled--BackgroundColor: transparent;
  --pf-c-button--m-control--after--BorderWidth: var(--pf-global--BorderWidth--sm);
  --pf-c-button--m-control--after--BorderTopColor: var(--pf-global--BorderColor--300);
  --pf-c-button--m-control--after--BorderRightColor: var(--pf-global--BorderColor--300);
  --pf-c-button--m-control--after--BorderBottomColor: var(--pf-global--BorderColor--200);
  --pf-c-button--m-control--after--BorderLeftColor: var(--pf-global--BorderColor--300);
  --pf-c-button--m-control--hover--after--BorderBottomWidth: var(--pf-global--BorderWidth--md);
  --pf-c-button--m-control--hover--after--BorderBottomColor: var(--pf-global--active-color--100);
  --pf-c-button--m-control--active--after--BorderBottomWidth: var(--pf-global--BorderWidth--md);
  --pf-c-button--m-control--active--after--BorderBottomColor: var(--pf-global--active-color--100);
  --pf-c-button--m-control--focus--after--BorderBottomWidth: var(--pf-global--BorderWidth--md);
  --pf-c-button--m-control--focus--after--BorderBottomColor: var(--pf-global--active-color--100);
  --pf-c-button--m-control--m-expanded--after--BorderBottomWidth: var(--pf-global--BorderWidth--md);
  --pf-c-button--m-control--m-expanded--after--BorderBottomColor: var(--pf-global--active-color--100);
  --pf-c-button--m-control--disabled--after--BorderBottomColor: var(--pf-global--BorderColor--300);
  --pf-c-button--m-control--disabled--BackgroundColor: transparent;
  --pf-c-button__icon--MarginRight: var(--pf-global--spacer--xs);
  --pf-c-button__text--icon--MarginLeft: var(--pf-global--spacer--xs);
  position: relative;
  display: inline-block;
  padding: var(--pf-c-button--PaddingTop) var(--pf-c-button--PaddingRight) var(--pf-c-button--PaddingBottom) var(--pf-c-button--PaddingLeft);
  font-size: var(--pf-c-button--FontSize);
  font-weight: var(--pf-c-button--FontWeight);
  line-height: var(--pf-c-button--LineHeight);
  text-align: center;
  white-space: nowrap;
  user-select: none;
  border: 0;
  border-radius: var(--pf-c-button--BorderRadius);
}

.odc-multiple-key-selector {
  padding-top: var(--pf-global--spacer--md);
}

.btn-dropdown__content-wrap {
  align-items: center;
  display: flex;
  flex: 1 1 auto;
  justify-content: space-between;
  min-width: 0;
}

.pf-c-dropdown__menu {
  position: absolute;
  top: var(--pf-c-dropdown__menu--Top);
  z-index: var(--pf-c-dropdown__menu--ZIndex);
  min-width: 100%;
  padding-top: var(--pf-c-dropdown__menu--PaddingTop);
  padding-bottom: var(--pf-c-dropdown__menu--PaddingBottom);
  background: var(--pf-c-dropdown__menu--BackgroundColor);
  background-clip: padding-box;
  border: var(--pf-c-dropdown__menu--BorderWidth) solid transparent;
  box-shadow: var(--pf-c-dropdown__menu--BoxShadow);
}

.dropdown-menu__autocomplete-filter {
  max-height: 60vh;
  overflow-x: hidden;
  overflow-y: auto;
}

.dropdown-menu__filter {
  padding: 5px var(--pf-c-dropdown__menu-item--PaddingRight) 10px;
}

.co-resource-item {
  align-items: baseline;
  display: flex;
  min-width: 0;
  min-width: 0;
  overflow-wrap: break-word;
  word-break: break-word;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.dropdown .co-m-resource-icon {
  margin-left: 2px;
}

.co-m-resource-icon {
  background-color: #2b9af3;
  border-radius: 20px;
  color: #fff;
  display: inline-block;
  flex-shrink: 0;
  font-size: 14px;
  line-height: 16px;
  margin-right: 4px;
  min-width: 18px;
  padding: 1px 4px;
  text-align: center;
  white-space: nowrap;
}

.co-m-resource-alertrule,
.co-m-resource-configmap {
  background-color: $color-configmap-dark;
}

.co-m-resource-secret {
  background-color: $color-secret-dark;
}
